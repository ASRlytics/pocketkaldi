import sys
import re
import struct

if len(sys.argv) != 3:
    print("Usage: python3 {}: <matrix-text> <stat-bin>".format(sys.argv[0]))
    print("Convert Kaldi CMVN stats to pocketkaldi format.")
    print("    matrix-text: text format of kaldi stats matrix (generated by copy-matrix).")
    sys.exit(1)

from_file = sys.argv[1]
to_file = sys.argv[2]

re_num = re.compile(r'^[-+]?[0-9]+(\.[0-9]+)?(e[-+]?[0-9]+)?$')

with open(from_file) as fd:
    matrix_data = list(map(
        lambda x: float(x),
        filter(
            lambda t: re_num.match(t) != None,
            " ".join(fd).split())))

if len(matrix_data) != 82:
    print("matrix_data == 82 expected, but {} found".format(len(matrix_data)))
    sys.exit(1)

stats = matrix_data[: 41]

with open(to_file, 'wb') as fd:
    # VEC section: stats_sum
    fd.write(b"VEC0")
    fd.write(struct.pack("<i", len(stats) * 4 + 4))
    fd.write(struct.pack("<i", len(stats)))
    for v in stats:
        fd.write(struct.pack("<f", v))
